version: '3.8'

services:
  # SQL Server Database
  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: validis-mssql
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Password123
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - mssql-data:/var/opt/mssql
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - validis-network
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "YourStrong@Password123", "-Q", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: validis-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - validis-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Application (optional - for production deployment)
  # app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: validis-app
  #   environment:
  #     - NODE_ENV=development
  #     - PORT=3000
  #     - WORKFLOW_MODE=audit
  #     - CLIENT_ID=docker-test-client
  #     - DB_SERVER=mssql
  #     - DB_DATABASE=validis_dev
  #     - DB_USERNAME=sa
  #     - DB_PASSWORD=YourStrong@Password123
  #     - REDIS_URL=redis://redis:6379
  #     - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     mssql:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   networks:
  #     - validis-network
  #   volumes:
  #     - ./src:/app/src
  #     - ./package.json:/app/package.json

networks:
  validis-network:
    driver: bridge

volumes:
  mssql-data:
  redis-data: